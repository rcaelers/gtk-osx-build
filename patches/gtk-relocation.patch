diff --git a/gtk/gtkprivate.h b/gtk/gtkprivate.h
index 7ba5a5d..b3fcf40 100644
--- a/gtk/gtkprivate.h
+++ b/gtk/gtkprivate.h
@@ -95,6 +95,27 @@ const gchar *_gtk_get_data_prefix ();
 
 #endif /* G_OS_WIN32 */
 
+/* Likewise for quartz */
+#ifdef  GDK_WINDOWING_QUARTZ
+
+const gchar *_gtk_quartz_get_datadir ();
+const gchar *_gtk_quartz_get_libdir ();
+const gchar *_gtk_quartz_get_sysconfdir ();
+const gchar *_gtk_quartz_get_localedir ();
+const gchar *_gtk_quartz_get_data_prefix ();
+
+#undef GTK_DATADIR
+#define GTK_DATADIR _gtk_quartz_get_datadir ()
+#undef GTK_LIBDIR
+#define GTK_LIBDIR _gtk_quartz_get_libdir ()
+#undef GTK_LOCALEDIR
+#define GTK_LOCALEDIR _gtk_quartz_get_localedir ()
+#undef GTK_SYSCONFDIR
+#define GTK_SYSCONFDIR _gtk_quartz_get_sysconfdir ()
+#undef GTK_DATA_PREFIX
+#define GTK_DATA_PREFIX _gtk_quartz_get_data_prefix ()
+
+#endif /*  GDK_WINDOWING_QUARTZ */
 gboolean _gtk_fnmatch (const char *pattern,
 		       const char *string,
 		       gboolean    no_leading_period);
diff --git a/gtk/gtkquartz.c b/gtk/gtkquartz.c
index 265d9ff..80b9e87 100644
--- a/gtk/gtkquartz.c
+++ b/gtk/gtkquartz.c
@@ -322,3 +322,71 @@ _gtk_quartz_set_selection_data_for_pasteboard (NSPasteboard     *pasteboard,
                                        freeWhenDone:NO]
                                             forType:type];
 }
+
+/*
+ * Bundle-based functions for various directories. These almost work
+ * even when the application isn't in a bundle, becuase mainBundle
+ * paths point to the bin directory in that case. It's a simple matter
+ * to test for that and remove the last element.
+ */
+
+static gchar *
+get_bundle_path()
+{
+  gchar *base, *path;
+  NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
+  gchar *resource_path = g_strdup([[[NSBundle mainBundle] resourcePath] UTF8String]);
+  [pool drain];
+  base = g_path_get_basename(resource_path);
+  if (strcmp(base, "bin") == 0) 
+    path = g_path_get_dirname(resource_path);
+  else
+    path = strdup(resource_path);
+  g_free(resource_path);
+  g_free(base);
+  return path;
+}
+
+const gchar *
+_gtk_quartz_get_datadir (void)
+{
+  gchar *resource_dir = get_bundle_path();
+  gchar *retval = g_build_filename(resource_dir, "share", NULL);
+  g_free(resource_dir);
+  return retval;
+}
+
+const gchar *
+_gtk_quartz_get_libdir (void)
+{
+  gchar *resource_dir = get_bundle_path();
+  gchar *retval = g_build_filename(resource_dir, "lib", NULL);
+  g_free(resource_dir);
+  return retval;
+}
+
+const gchar *
+_gtk_quartz_get_localedir (void)
+{
+
+  gchar *resource_dir = get_bundle_path();
+  gchar *retval = g_build_filename(resource_dir, "share", "locale", NULL);
+  g_free(resource_dir);
+  return retval;
+}
+
+const gchar *
+_gtk_quartz_get_sysconfdir (void)
+{
+  gchar *resource_dir = get_bundle_path();
+  gchar *retval = g_build_filename(resource_dir, "etc", NULL);
+  g_free(resource_dir);
+  return retval;
+}
+
+const gchar *
+_gtk_quartz_get_data_prefix (void)
+{
+  return get_bundle_path();
+}
+
